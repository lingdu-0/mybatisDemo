<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	namespace：命名空间，它的作用就是对SQL进行分类化管理，可以理解为SQL隔离
	注意：使用mapper代理开发时，namespace有特殊且重要的作用
 -->
<mapper namespace="com.wb.mapper.UserMapper">
    <resultMap id="myUser" type="user">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="sex" column="sex"/>
        <result property="birthday" column="birthday"/>
        <result property="address" column="address"/>
    </resultMap>
    <resultMap id="myUser2" type="user2">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="tell" column="tell"/>
        <association property="address" javaType="address">
            <result property="address" column="address"/>
        </association>
    </resultMap>

    <!--
    添加时返回编号配置
    useGeneratedKeys="true"
    keyProperty="id"
    -->
    <insert id="insert" parameterType="user" useGeneratedKeys="true" keyProperty="id">
        insert into user (username,sex,birthday,address)
        value (#{username},#{sex},#{birthday},#{address});
    </insert>
    <!--根据ID查询-->
    <select id="findOne" parameterType="int" resultType="user">
        select * from user where id = #{id}
    </select>
    <!--多表联查-->
    <select id="findById" resultMap="myUser2">
        select * from t_user u, t_address a where u.id=a.id and u.id = #{id}
    </select>
</mapper>